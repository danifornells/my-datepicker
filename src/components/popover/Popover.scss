/**
 * Component Tokens
 *
 * [NOTE]: 'bourgeois' is the default brand. Used here for syntax highLighting.
 *   On compilation, will be replaced by configured brand.
 */
@import "../../../build/tokens/bourgeois/tokens.popover";

/** Mixins */
@import "./mixins";
@import "../../styles/mixins/media-from";


/**
 * PopoverBackdrop Styles
 */
.PopoverWrapper {
  position: relative;
}


/**
 * PopoverBox Styles
 */
.PopoverBox {
  display: inline-block;
  background-color: $color-background-popover-box;
  opacity: 0;
  transform: translateY(25%);
  padding: $size-padding-popover-box;
  box-shadow: $config-shadow-popover-box;
  position: fixed;
  bottom: -1px;
  left: -1px;
  right: -1px;
  max-height: 60vh;
  z-index: 1;

  // Border config
  @if $config-border-enable-popover-box == true {
    border: solid 1px $color-border-popover-box;
  } @else if $config-border-enable-popover-box != false {
    @warn "$config-border-enable-popover-box: `#{$config-border-enable-popover-box}` is not one of [true, false]";
  }

  // Configurable floating functionality
  @each $_breakpoint in $config-floats-from-popover-box {
    @include media-from($_breakpoint) {
      &.floats-from-#{$_breakpoint} {
        @include let-popover-box-to-float();
        @include add-popover-top-left-arrow();
        @include let-popover-appear-from-top();
      }
    }
  }

  // Centered content
  &.is-content-centered {
    text-align: center;
  }

  // Transition states
  &.is-going-to-appear,
  &.is-going-to-enter {
    opacity: 0;
    transform: translateY(25%);

  }
  &.is-appearing,
  &.is-entering {
    opacity: 1;
    transform: translateY(0);
    transition-property: transform, opacity;
    transition-duration: $time-transition-popover-box;
    transition-timing-function: $config-easing-popover-box-in;
  }
  &.had-appeared,
  &.had-entered {
    opacity: 1;
    transform: translateY(0);
  }
  &.is-going-to-exit {
    opacity: 1;
    transform: translateY(0%);
  }
  &.is-exiting {
    opacity: 0;
    transform: translateY(25%);
    transition-property: transform, opacity;
    transition-duration: $time-transition-popover-box;
    transition-timing-function: $config-easing-popover-box-out;
  }
  &.had-exited {
    opacity: 0;
    transform: translateY(25%);
  }
}